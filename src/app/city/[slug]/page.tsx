import { Suspense } from 'react';
import { notFound } from 'next/navigation';
import AppHeader from '@/components/AppHeader';
import EventsList from '@/components/EventsList';
import EventFilters from '@/components/EventFilters';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞
async function getCity(slug: string) {
  try {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API
    // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–∞–≥–∞
    const cityNames: Record<string, string> = {
      'moscow': '–ú–æ—Å–∫–≤–∞',
      'sankt-peterburg': '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', 
      'ekaterinburg': '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥',
      'kazan': '–ö–∞–∑–∞–Ω—å'
    };
    
    const cityName = cityNames[slug];
    if (!cityName) {
      return null;
    }
    
    return {
      name: cityName,
      slug: slug
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞:', error);
    return null;
  }
}

interface CityPageProps {
  params: Promise<{ slug: string }>;
}

export default async function CityPage({ params }: CityPageProps) {
  const { slug } = await params;
  const city = await getCity(slug);

  if (!city) {
    notFound();
  }

  return (
    <>
      {/* Header */}
      <AppHeader />
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <main className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8 py-6 sm:py-8 lg:py-12">
          
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥–æ—Ä–æ–¥–∞ */}
          <div className="text-center mb-8 sm:mb-12">
            <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-3 sm:mb-4">
              üé≠ –ê—Ñ–∏—à–∞ {city.name}
            </h1>
            <p className="text-base sm:text-lg text-gray-600 max-w-xl lg:max-w-2xl mx-auto px-4">
              –õ—É—á—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ –≥–æ—Ä–æ–¥–µ {city.name}. 
              –ù–∞–π–¥–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏ –Ω–∏—á–µ–≥–æ –≤–∞–∂–Ω–æ–≥–æ!
            </p>
          </div>

          {/* –§–∏–ª—å—Ç—Ä—ã —Å–æ–±—ã—Ç–∏–π */}
          <div className="mb-6 sm:mb-8">
            <EventFilters defaultCity={city.name} />
          </div>

          {/* –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π –≥–æ—Ä–æ–¥–∞ */}
          <Suspense fallback={
            <div className="flex justify-center items-center h-32 sm:h-64">
              <div className="animate-spin rounded-full h-8 w-8 sm:h-12 sm:w-12 border-b-2 border-indigo-600"></div>
            </div>
          }>
            <EventsList cityFilter={city.name} />
          </Suspense>

          {/* –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è */}
          <div className="fixed bottom-4 right-4 sm:bottom-6 sm:right-6">
            <a
              href={`/create-event?city=${encodeURIComponent(city.name)}`}
              className="bg-indigo-600 hover:bg-indigo-700 text-white rounded-full 
                         shadow-lg transition-all duration-200 hover:scale-110
                         flex items-center justify-center
                         w-12 h-12 sm:w-14 sm:h-14 
                         text-xl sm:text-2xl font-bold
                         active:scale-95"
              aria-label={`–°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –≤ ${city.name}`}
            >
              +
            </a>
          </div>
        </div>
      </main>
    </>
  );
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
export async function generateStaticParams() {
  return [
    { slug: 'moscow' },
    { slug: 'sankt-peterburg' },
    { slug: 'ekaterinburg' },
    { slug: 'kazan' }
  ];
}

// –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è SEO
export async function generateMetadata({ params }: CityPageProps) {
  const { slug } = await params;
  const city = await getCity(slug);
  
  if (!city) {
    return {
      title: '–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω - City Affiche'
    };
  }
  
  return {
    title: `–ê—Ñ–∏—à–∞ ${city.name} - City Affiche`,
    description: `–õ—É—á—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ ${city.name}: –∫–æ–Ω—Ü–µ—Ä—Ç—ã, —Ç–µ–∞—Ç—Ä, –≤—ã—Å—Ç–∞–≤–∫–∏, —Å–ø–æ—Ä—Ç –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ`,
    keywords: `–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è ${city.name}, –∞—Ñ–∏—à–∞ ${city.name}, —Å–æ–±—ã—Ç–∏—è ${city.name}`,
  };
} 