// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –≥–æ—Ä–æ–¥–æ–≤

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ–º–æ—â–∏
function showHelp() {
  console.log(`
üèôÔ∏è City Manager - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞–º–∏

–ö–æ–º–∞–Ω–¥—ã:
  node scripts/city-manager.js list                    - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≥–æ—Ä–æ–¥–∞
  node scripts/city-manager.js add "–ù–∞–∑–≤–∞–Ω–∏–µ" "URL"   - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥
  node scripts/city-manager.js update slug "URL"      - –û–±–Ω–æ–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  node scripts/city-manager.js delete slug            - –£–¥–∞–ª–∏—Ç—å –≥–æ—Ä–æ–¥
  node scripts/city-manager.js local                  - –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤—Å–µ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  node scripts/city-manager.js external               - –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤—Å–µ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ URL

–ü—Ä–∏–º–µ—Ä—ã:
  node scripts/city-manager.js add "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥" "/cities/nn.jpg"
  node scripts/city-manager.js update ekaterinburg "/cities/ekaterinburg.jpg"
  node scripts/city-manager.js local
  `);
}

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async function listCities() {
  try {
    const response = await fetch('http://localhost:3000/api/cities');
    const data = await response.json();
    
    console.log('\nüèôÔ∏è –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤:\n');
    data.cities.forEach((city, index) => {
      console.log(`${index + 1}. ${city.name} (${city.slug})`);
      console.log(`   üì∑ ${city.imageUrl}`);
      console.log(`   üìä –°–æ–±—ã—Ç–∏—è: ${city.eventsCount}`);
      console.log('');
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

async function addCity(name, imageUrl) {
  try {
    const response = await fetch('http://localhost:3000/api/cities', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ name, imageUrl }),
    });
    
    if (response.ok) {
      const city = await response.json();
      console.log(`‚úÖ –ì–æ—Ä–æ–¥ "${name}" —Å–æ–∑–¥–∞–Ω —Å slug: ${city.slug}`);
    } else {
      const error = await response.json();
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.error}`);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

async function updateCity(slug, imageUrl) {
  try {
    const response = await fetch(`http://localhost:3000/api/cities/${slug}`, {
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ imageUrl }),
    });
    
    if (response.ok) {
      console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ "${slug}" –æ–±–Ω–æ–≤–ª–µ–Ω–æ`);
    } else {
      const error = await response.json();
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.error}`);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

async function switchToLocal() {
  const localImages = {
    'moscow': '/cities/moscow.jpg',
    'sankt-peterburg': '/cities/spb.jpg',
    'ekaterinburg': '/cities/ekaterinburg.jpg',
    'kazan': '/cities/kazan.jpg'
  };
  
  console.log('üîÑ –ü–µ—Ä–µ–≤–æ–¥–∏–º –≥–æ—Ä–æ–¥–∞ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...\n');
  
  for (const [slug, imageUrl] of Object.entries(localImages)) {
    await updateCity(slug, imageUrl);
  }
  
  console.log('\n‚úÖ –í—Å–µ –≥–æ—Ä–æ–¥–∞ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!');
}

async function switchToExternal() {
  const externalImages = {
    'moscow': 'https://images.unsplash.com/photo-1513326738677-b964603b136d?w=1200&h=600&fit=crop',
    'sankt-peterburg': 'https://images.unsplash.com/photo-1520637836862-4d197d17c767?w=1200&h=600&fit=crop',
    'ekaterinburg': 'https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?w=1200&h=600&fit=crop',
    'kazan': 'https://images.unsplash.com/photo-1584464491033-06628f3a6b7b?w=1200&h=600&fit=crop'
  };
  
  console.log('üîÑ –ü–µ—Ä–µ–≤–æ–¥–∏–º –≥–æ—Ä–æ–¥–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...\n');
  
  for (const [slug, imageUrl] of Object.entries(externalImages)) {
    await updateCity(slug, imageUrl);
  }
  
  console.log('\n‚úÖ –í—Å–µ –≥–æ—Ä–æ–¥–∞ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!');
}

// –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
async function addPopularCities() {
  const cities = [
    { name: '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥', imageUrl: 'https://images.unsplash.com/photo-1579952363873-27d3bfad9c0d?w=1200&h=600&fit=crop' },
    { name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', imageUrl: 'https://images.unsplash.com/photo-1551974832-b5cc99c24b11?w=1200&h=600&fit=crop' },
    { name: '–ß–µ–ª—è–±–∏–Ω—Å–∫', imageUrl: 'https://images.unsplash.com/photo-1567093322503-e7c27d5b85b6?w=1200&h=600&fit=crop' },
    { name: '–°–∞–º–∞—Ä–∞', imageUrl: 'https://images.unsplash.com/photo-1574869172199-e5b3b31e2007?w=1200&h=600&fit=crop' }
  ];
  
  console.log('üèôÔ∏è –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥–æ—Ä–æ–¥–∞...\n');
  
  for (const city of cities) {
    await addCity(city.name, city.imageUrl);
  }
  
  console.log('\n‚úÖ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
async function main() {
  const args = process.argv.slice(2);
  const command = args[0];
  
  if (!command || command === 'help') {
    showHelp();
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
  try {
    await fetch('http://localhost:3000/api/cities');
  } catch (error) {
    console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev');
    return;
  }
  
  switch (command) {
    case 'list':
      await listCities();
      break;
      
    case 'add':
      if (args.length < 3) {
        console.log('‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/city-manager.js add "–ù–∞–∑–≤–∞–Ω–∏–µ" "URL"');
        return;
      }
      await addCity(args[1], args[2]);
      break;
      
    case 'update':
      if (args.length < 3) {
        console.log('‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/city-manager.js update slug "URL"');
        return;
      }
      await updateCity(args[1], args[2]);
      break;
      
    case 'local':
      await switchToLocal();
      break;
      
    case 'external':
      await switchToExternal();
      break;
      
    case 'popular':
      await addPopularCities();
      break;
      
    default:
      console.log(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: ${command}`);
      showHelp();
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (typeof window === 'undefined') {
  main();
}

module.exports = { listCities, addCity, updateCity, switchToLocal, switchToExternal }; 