import { Event } from '@/types';
import Image from 'next/image';
import Link from 'next/link';

interface EventCardProps {
  event: Event;
}

export default function EventCard({ event }: EventCardProps) {
  const formatDate = (date: Date) => {
    return new Date(date).toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'long',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  const getCategoryIcon = (category: string) => {
    const icons: Record<string, string> = {
      '–ö–æ–Ω—Ü–µ—Ä—Ç—ã': 'üéµ',
      '–¢–µ–∞—Ç—Ä': 'üé≠',
      '–ö–∏–Ω–æ': 'üé¨',
      '–í—ã—Å—Ç–∞–≤–∫–∏': 'üé®',
      '–°–ø–æ—Ä—Ç': '‚öΩ',
      '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ': 'üìö',
      '–ë–∏–∑–Ω–µ—Å': 'üíº',
      '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è': 'üé™',
      '–ö—É–ª—å—Ç—É—Ä–∞': 'üèõÔ∏è',
      '–î—Ä—É–≥–æ–µ': 'üìÖ',
    };
    return icons[category] || 'üìÖ';
  };

  return (
    <div className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow w-full sm:max-w-sm md:max-w-md lg:max-w-lg">
      
      {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –≤—ã—Å–æ—Ç–∞ */}
      {event.image ? (
        <div className="relative h-32 sm:h-40 md:h-48">
          <Image
            src={event.image}
            alt={event.title}
            fill
            className="object-cover"
          />
        </div>
      ) : (
        <div className="h-32 sm:h-40 md:h-48 bg-gradient-to-r from-indigo-500 to-purple-600 flex items-center justify-center">
          <span className="text-4xl sm:text-5xl md:text-6xl">
            {getCategoryIcon(event.category)}
          </span>
        </div>
      )}

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã */}
      <div className="p-3 sm:p-4 md:p-6">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ */}
        <Link href={`/events/${event._id}`}>
          <h3 className="text-lg sm:text-xl font-semibold text-gray-900 mb-2 hover:text-indigo-600 transition-colors line-clamp-2">
            {event.title}
          </h3>
        </Link>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ - —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö */}
        <p className="text-gray-600 mb-3 sm:mb-4 line-clamp-2 sm:line-clamp-3 text-sm sm:text-base">
          {event.description}
        </p>

        {/* –ú–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã */}
        <div className="space-y-1 sm:space-y-2 mb-3 sm:mb-4">
          {/* –î–∞—Ç–∞ */}
          <div className="flex items-center text-xs sm:text-sm text-gray-500">
            <span className="mr-2">üìÖ</span>
            <span className="truncate">{formatDate(event.date)}</span>
          </div>

          {/* –ì–æ—Ä–æ–¥ */}
          <div className="flex items-center text-xs sm:text-sm text-gray-500">
            <span className="mr-2">{event.isOnline ? 'üíª' : 'üìç'}</span>
            <span className="truncate">{event.isOnline ? '–û–Ω–ª–∞–π–Ω' : event.city}</span>
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
          <div className="flex items-center text-xs sm:text-sm text-gray-500">
            <span className="mr-2">{getCategoryIcon(event.category)}</span>
            <span className="truncate">{event.category}</span>
          </div>
        </div>

        {/* –ê–≤—Ç–æ—Ä –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∫–æ–º–ø–æ–Ω–æ–≤–∫–∞ */}
        <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between text-xs sm:text-sm text-gray-500 border-t pt-2 sm:pt-4 space-y-2 sm:space-y-0">
          
          <div className="flex items-center">
            <span className="mr-2">üë§</span>
            <span className="truncate">{event.author?.name || '–ê–Ω–æ–Ω–∏–º'}</span>
          </div>
          
          <div className="flex items-center space-x-3 sm:space-x-4">
            <span className="flex items-center">
              üí¨ {event.messages?.length || 0}
            </span>
            <span className="flex items-center">
              üëç {event.votes?.filter(v => v.value === 1).length || 0}
            </span>
          </div>
        </div>
      </div>
    </div>
  );
} 